version: '3.8'

services:
  go_db:
    container_name: postgres-go
    image: postgres
    env_file:
      - .env
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 10s
      retries: 10

  go_redis:
    container_name: redis-go
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis:/data
    restart: always
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 5

  go_app:
    container_name: awesome_gin_app
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - "8080:8080"
    volumes:
      - .:/app  # Для синхронизации исходного кода между хостом и контейнером
    depends_on:
      go_db:
        condition: service_healthy
      go_redis:
        condition: service_healthy

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://host.docker.internal:9092
      # KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      # KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      # KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      # KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    extra_hosts:
      - host.docker.internal:host-gateway
    ports:
      - "9000:9000"
    depends_on:
      - kafka
      - zookeeper
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: host.docker.internal:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      # KAFKA_BROKERCONNECT: "kafka:9092"

volumes:
  redis:
  go_app: